"""add clients table, and tags, and relation between them, client oriented changes on tenant and appointments tables

Revision ID: 712ff85625dc
Revises: 195655731c14
Create Date: 2025-04-27 04:47:49.778664

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '712ff85625dc'
down_revision: Union[str, None] = '195655731c14'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('appointment_services_service_id_fkey', 'appointment_services', type_='foreignkey')
    op.drop_constraint('appointment_services_appointment_id_fkey', 'appointment_services', type_='foreignkey')
    op.create_foreign_key(None, 'appointment_services', 'appointments', ['appointment_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'appointment_services', 'services', ['service_id'], ['id'], ondelete='CASCADE')
    op.add_column('appointments', sa.Column('client_id', sa.Integer(), nullable=False))
    op.alter_column('appointments', 'appointment_time',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
    op.create_index(op.f('ix_appointments_client_id'), 'appointments', ['client_id'], unique=False)
    op.create_index(op.f('ix_appointments_status'), 'appointments', ['status'], unique=False)
    op.create_index(op.f('ix_appointments_tenant_id'), 'appointments', ['tenant_id'], unique=False)
    op.create_foreign_key(None, 'appointments', 'clients', ['client_id'], ['id'])
    op.drop_column('appointments', 'client_name')
    op.drop_column('appointments', 'client_email')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('appointments', sa.Column('client_email', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('appointments', sa.Column('client_name', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'appointments', type_='foreignkey')
    op.drop_index(op.f('ix_appointments_tenant_id'), table_name='appointments')
    op.drop_index(op.f('ix_appointments_status'), table_name='appointments')
    op.drop_index(op.f('ix_appointments_client_id'), table_name='appointments')
    op.alter_column('appointments', 'appointment_time',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.drop_column('appointments', 'client_id')
    op.drop_constraint(None, 'appointment_services', type_='foreignkey')
    op.drop_constraint(None, 'appointment_services', type_='foreignkey')
    op.create_foreign_key('appointment_services_appointment_id_fkey', 'appointment_services', 'appointments', ['appointment_id'], ['id'])
    op.create_foreign_key('appointment_services_service_id_fkey', 'appointment_services', 'services', ['service_id'], ['id'])
    # ### end Alembic commands ###
