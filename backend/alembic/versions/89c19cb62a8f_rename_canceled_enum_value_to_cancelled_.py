"""Rename canceled enum value to cancelled in appointmentstatus

Revision ID: 89c19cb62a8f
Revises: 5edf8e9a6358
Create Date: 2025-04-24 21:10:40.041306

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '89c19cb62a8f'
down_revision: Union[str, None] = '5edf8e9a6358'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


ENUM_NAME = "appointmentstatus"
OLD_VALUE = "canceled"
NEW_VALUE = "cancelled"

def upgrade() -> None:
    # Use raw SQL for enum value rename (most reliable way)
    # Check PostgreSQL version compatibility if needed, but this is standard
    op.execute(f"ALTER TYPE {ENUM_NAME} RENAME VALUE '{OLD_VALUE}' TO '{NEW_VALUE}';")
    # If Alembic autogenerated other unrelated changes, keep them here


def downgrade() -> None:
    # Reverse the rename in downgrade
    op.execute(f"ALTER TYPE {ENUM_NAME} RENAME VALUE '{NEW_VALUE}' TO '{OLD_VALUE}';")
     # If Alembic autogenerated other unrelated changes, reverse them here too
